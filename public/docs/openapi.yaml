openapi: 3.0.3
info:
  title: 'Delivery Sys'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://delivery.test'
paths:
  /api/v1/register:
    post:
      summary: 'Register New User.'
      operationId: registerNewUser
      description: 'This endpoint allows a user to register'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: null
                    uuid: null
                    name: 'Arhinful Emmanuel'
                    email: kofibusy@gmail.com
                    created_at: null
                    roles: []
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      uuid:
                        type: string
                        example: null
                      name:
                        type: string
                        example: 'Arhinful Emmanuel'
                      email:
                        type: string
                        example: kofibusy@gmail.com
                      created_at:
                        type: string
                        example: null
                      roles:
                        type: array
                        example: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jnhsoyvmlq
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: pierce90@example.com
                password:
                  type: string
                  description: ''
                  example: est
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: voluptatum
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/v1/login:
    post:
      summary: Login.
      operationId: login
      description: 'This endpoint allows users to login.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"user\": {\n     ....,\n     \"roles\":[{\n         ....\n     }]\n },\n \"token\": \"1cds1s64c...\",\n}"
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'These credentials do not match our records.'
                  errors:
                    email:
                      - 'These credentials do not match our records.'
                properties:
                  message:
                    type: string
                    example: 'These credentials do not match our records.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'These credentials do not match our records.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: alaina89@example.net
                password:
                  type: string
                  description: ''
                  example: 'gwuyIXI$]MW'
              required:
                - email
                - password
      security: []
  /api/v1/forgot-password:
    post:
      summary: 'Handle an incoming password reset link request.'
      operationId: handleAnIncomingPasswordResetLinkRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: xweissnat@example.net
              required:
                - email
      security: []
  /api/v1/reset-password:
    post:
      summary: 'Handle an incoming new password request.'
      operationId: handleAnIncomingNewPasswordRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: voluptate
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: vidal10@example.org
                password:
                  type: string
                  description: ''
                  example: quia
              required:
                - token
                - email
                - password
      security: []
  '/api/v1/verify-email/{id}/{hash}':
    get:
      summary: "Mark the authenticated user's email address as verified."
      operationId: markTheAuthenticatedUsersEmailAddressAsVerified
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the verify email.'
        example: voluptatibus
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  /api/v1/email/verification-notification:
    post:
      summary: 'Send a new email verification notification.'
      operationId: sendANewEmailVerificationNotification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      security: []
  /api/v1/logout:
    post:
      summary: ''
      operationId: postApiV1Logout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
  '/api/v1/{fallbackPlaceholder}':
    get:
      summary: ''
      operationId: getApiV1FallbackPlaceholder
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'API resource not found'
                properties:
                  message:
                    type: string
                    example: 'API resource not found'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: fallbackPlaceholder
        description: ''
        example: C
        required: true
        schema:
          type: string
  /api/v1/menu-items:
    get:
      summary: 'Fetch Menus.'
      operationId: fetchMenus
      description: "Filter: /menu-items?filter[name]=kofibusy lounge [can be filtered by name and or price and or restaurant.id].\nSort: /menu-items?sort=name(Ascending) or -name, price, -price,"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - []
                    - []
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: /
                    per_page: 15
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      - []
                      - []
                    items:
                      type: array
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: '/?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 2
      tags:
        - 'Menu Items'
      security: []
    post:
      summary: ''
      operationId: postApiV1MenuItems
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: Bearer
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Menu Items'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurant_id:
                  type: string
                  description: ''
                  example: sint
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: horvttvtogsoqfsdj
                price:
                  type: string
                  description: 'Must not be greater than 199 characters.'
                  example: imvdkpjnfdtmdtdarqhv
                description:
                  type: string
                  description: 'Must not be greater than 299 characters.'
                  example: 'Laudantium omnis voluptatem repellat dolorem iure.'
              required:
                - restaurant_id
                - name
                - price
                - description
  /api/v1/restaurants:
    get:
      summary: 'Fetch Restaurants.'
      operationId: fetchRestaurants
      description: "Filter: /restaurants?filter[name]=kofibusy lounge [can be filtered by name and or location].\nSort: /restaurants?sort=name(Ascending) or restaurants?sort=-name (Descending)\n[can be ordered by name and location]."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 2
                      uuid: afa96bf1-6c96-44d9-9232-3979a645de7d
                      name: xip
                      location: jcdy
                      code: '408764477147633'
                      is_active: 1
                      added_by_id: 1
                      deleted_at: null
                      created_at: '2023-06-22T13:48:35.000000Z'
                      updated_at: '2023-06-22T13:48:35.000000Z'
                    -
                      id: 2
                      uuid: afa96bf1-6c96-44d9-9232-3979a645de7d
                      name: xip
                      location: jcdy
                      code: '408764477147633'
                      is_active: 1
                      added_by_id: 1
                      deleted_at: null
                      created_at: '2023-06-22T13:48:35.000000Z'
                      updated_at: '2023-06-22T13:48:35.000000Z'
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: /
                    per_page: 15
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 2
                        uuid: afa96bf1-6c96-44d9-9232-3979a645de7d
                        name: xip
                        location: jcdy
                        code: '408764477147633'
                        is_active: 1
                        added_by_id: 1
                        deleted_at: null
                        created_at: '2023-06-22T13:48:35.000000Z'
                        updated_at: '2023-06-22T13:48:35.000000Z'
                      -
                        id: 2
                        uuid: afa96bf1-6c96-44d9-9232-3979a645de7d
                        name: xip
                        location: jcdy
                        code: '408764477147633'
                        is_active: 1
                        added_by_id: 1
                        deleted_at: null
                        created_at: '2023-06-22T13:48:35.000000Z'
                        updated_at: '2023-06-22T13:48:35.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        uuid:
                          type: string
                          example: afa96bf1-6c96-44d9-9232-3979a645de7d
                        name:
                          type: string
                          example: xip
                        location:
                          type: string
                          example: jcdy
                        code:
                          type: string
                          example: '408764477147633'
                        is_active:
                          type: integer
                          example: 1
                        added_by_id:
                          type: integer
                          example: 1
                        deleted_at:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2023-06-22T13:48:35.000000Z'
                        updated_at:
                          type: string
                          example: '2023-06-22T13:48:35.000000Z'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: '/?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 2
      tags:
        - Restaurants
      security: []
    post:
      summary: ''
      operationId: postApiV1Restaurants
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: Bearer
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 2
                    uuid: afa96bf1-6c96-44d9-9232-3979a645de7d
                    name: xip
                    location: jcdy
                    code: '408764477147633'
                    is_active: 1
                    added_by_id: 1
                    deleted_at: null
                    created_at: '2023-06-22T13:48:35.000000Z'
                    updated_at: '2023-06-22T13:48:35.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      uuid:
                        type: string
                        example: afa96bf1-6c96-44d9-9232-3979a645de7d
                      name:
                        type: string
                        example: xip
                      location:
                        type: string
                        example: jcdy
                      code:
                        type: string
                        example: '408764477147633'
                      is_active:
                        type: integer
                        example: 1
                      added_by_id:
                        type: integer
                        example: 1
                      deleted_at:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2023-06-22T13:48:35.000000Z'
                      updated_at:
                        type: string
                        example: '2023-06-22T13:48:35.000000Z'
      tags:
        - Restaurants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: hiqdavsmsoxjwnuyl
                location:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: essnmxng
              required:
                - name
                - location
  '/api/v1/restaurants/{id}':
    get:
      summary: 'Fetch Single Restaurants.'
      operationId: fetchSingleRestaurants
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 2
                    uuid: afa96bf1-6c96-44d9-9232-3979a645de7d
                    name: xip
                    location: jcdy
                    code: '408764477147633'
                    is_active: 1
                    added_by_id: 1
                    deleted_at: null
                    created_at: '2023-06-22T13:48:35.000000Z'
                    updated_at: '2023-06-22T13:48:35.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      uuid:
                        type: string
                        example: afa96bf1-6c96-44d9-9232-3979a645de7d
                      name:
                        type: string
                        example: xip
                      location:
                        type: string
                        example: jcdy
                      code:
                        type: string
                        example: '408764477147633'
                      is_active:
                        type: integer
                        example: 1
                      added_by_id:
                        type: integer
                        example: 1
                      deleted_at:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2023-06-22T13:48:35.000000Z'
                      updated_at:
                        type: string
                        example: '2023-06-22T13:48:35.000000Z'
      tags:
        - Restaurants
      security: []
    put:
      summary: ''
      operationId: putApiV1RestaurantsId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: Bearer
          schema:
            type: string
      responses:
        202:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 2
                    uuid: afa96bf1-6c96-44d9-9232-3979a645de7d
                    name: xip
                    location: jcdy
                    code: '408764477147633'
                    is_active: 1
                    added_by_id: 1
                    deleted_at: null
                    created_at: '2023-06-22T13:48:35.000000Z'
                    updated_at: '2023-06-22T13:48:35.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      uuid:
                        type: string
                        example: afa96bf1-6c96-44d9-9232-3979a645de7d
                      name:
                        type: string
                        example: xip
                      location:
                        type: string
                        example: jcdy
                      code:
                        type: string
                        example: '408764477147633'
                      is_active:
                        type: integer
                        example: 1
                      added_by_id:
                        type: integer
                        example: 1
                      deleted_at:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2023-06-22T13:48:35.000000Z'
                      updated_at:
                        type: string
                        example: '2023-06-22T13:48:35.000000Z'
      tags:
        - Restaurants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: qvx
                location:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: dfijbqydiju
              required:
                - name
                - location
    delete:
      summary: ''
      operationId: deleteApiV1RestaurantsId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: Bearer
          schema:
            type: string
      responses:
        202:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 2
                    uuid: afa96bf1-6c96-44d9-9232-3979a645de7d
                    name: xip
                    location: jcdy
                    code: '408764477147633'
                    is_active: 1
                    added_by_id: 1
                    deleted_at: null
                    created_at: '2023-06-22T13:48:35.000000Z'
                    updated_at: '2023-06-22T13:48:35.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      uuid:
                        type: string
                        example: afa96bf1-6c96-44d9-9232-3979a645de7d
                      name:
                        type: string
                        example: xip
                      location:
                        type: string
                        example: jcdy
                      code:
                        type: string
                        example: '408764477147633'
                      is_active:
                        type: integer
                        example: 1
                      added_by_id:
                        type: integer
                        example: 1
                      deleted_at:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2023-06-22T13:48:35.000000Z'
                      updated_at:
                        type: string
                        example: '2023-06-22T13:48:35.000000Z'
      tags:
        - Restaurants
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the restaurant.'
        example: 2
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Menu Items'
    description: ''
  -
    name: Restaurants
    description: ''
