## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Menu Items'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/menu/items
    metadata:
      groupName: 'Menu Items'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Menu Items.'
      description: |-
        <aside>
        <h3>Filtering<h3>
        Can be filtered by: [name], [price], [restaurant.id].
        </aside>

        <aside>
        <h3>Sorting<h3>
        Can sorted by: name, price
        </aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":201,"uuid":"6d844ff5-9f9b-40cb-a953-fe3ed6599262","name":"Cheese Dog","location":null,"created_at":"Sat, 24th Jun 2023"},{"id":202,"uuid":"61c0af63-ec9c-4407-a313-9a5af3739115","name":"Little Bacon Cheeseburger","location":null,"created_at":"Sat, 24th Jun 2023"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":15,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/menu/items
    metadata:
      groupName: 'Menu Items'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create New Menu Item.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
      Authorization: Bearer.
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      restaurant_id:
        name: restaurant_id
        description: ''
        required: true
        example: 19
        type: integer
        custom: []
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: pdsuehcgznsmndbwpud
        type: string
        custom: []
      price:
        name: price
        description: 'Must be between 0 and 9999999999.99.'
        required: true
        example: 1
        type: number
        custom: []
      description:
        name: description
        description: 'Must not be greater than 299 characters.'
        required: true
        example: 'Praesentium reprehenderit illo eos ipsam aut.'
        type: string
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2000 kilobytes.'
        required: false
        example: null
        type: file
        custom: []
    cleanBodyParameters:
      restaurant_id: 19
      name: pdsuehcgznsmndbwpud
      price: 1
      description: 'Praesentium reprehenderit illo eos ipsam aut.'
    fileParameters:
      image: null
    responses:
      -
        status: 201
        content: '{"data":{"id":null,"uuid":null,"name":"Bacon Cheeseburger","slug":null,"price":null,"image":null,"created_at":"Thu, 1st Jan 1970"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/menu/items/{id}'
    metadata:
      groupName: 'Menu Items'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Single Menu Item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the item.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":203,"uuid":"5b2826ee-8f21-49bd-8300-e4193f79e203","name":"Little Cheeseburger","slug":"little-cheeseburger-6","price":null,"image":null,"created_at":"Sat, 24th Jun 2023","restaurant":{"id":53,"uuid":"068b7fac-6dc9-4cda-ad44-21e5488d6cf9","name":"Gleason, Blick and Bradtke","location":"East Josefina","created_at":"Sat, 24th Jun 2023"}}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/menu/items/{id}'
    metadata:
      groupName: 'Menu Items'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Menu Item.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
      Authorization: Bearer
    urlParameters:
      id:
        name: id
        description: 'The ID of the item.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: cyosyroehedtcscmuookbva
        type: string
        custom: []
      price:
        name: price
        description: 'Must be between 0 and 9999999999.99.'
        required: true
        example: 1
        type: number
        custom: []
      description:
        name: description
        description: 'Must not be greater than 299 characters.'
        required: true
        example: 'Asperiores rerum voluptates quisquam ut qui.'
        type: string
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2000 kilobytes.'
        required: false
        example: null
        type: file
        custom: []
    cleanBodyParameters:
      name: cyosyroehedtcscmuookbva
      price: 1
      description: 'Asperiores rerum voluptates quisquam ut qui.'
    fileParameters:
      image: null
    responses:
      -
        status: 202
        content: '{"data":{"id":null,"uuid":null,"name":"Bacon Cheese Dog","slug":null,"price":null,"image":null,"created_at":"Thu, 1st Jan 1970"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/menu/items/{id}'
    metadata:
      groupName: 'Menu Items'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Menu Item.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: Bearer
    urlParameters:
      id:
        name: id
        description: 'The ID of the item.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
