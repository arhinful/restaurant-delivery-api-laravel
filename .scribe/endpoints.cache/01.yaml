## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Menu Items'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/menu-items
    metadata:
      groupName: 'Menu Items'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Menu Items.'
      description: |-
        <aside>
        <h3>Filtering<h3>
        Can be filtered by: [name], [price], [restaurant.id].
        </aside>

        <aside>
        <h3>Sorting<h3>
        Can sorted by: name, price
        </aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":null,"uuid":null,"name":null,"location":null,"created_at":"Thu, 1st Jan 1970"},{"id":null,"uuid":null,"name":null,"location":null,"created_at":"Thu, 1st Jan 1970"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":15,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/menu-items
    metadata:
      groupName: 'Menu Items'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create New Menu Item.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: Bearer.
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      restaurant_id:
        name: restaurant_id
        description: ''
        required: true
        example: cum
        type: string
        custom: []
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: hxhacmykrablhywzrmbmktuy
        type: string
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: sint
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 299 characters.'
        required: true
        example: 'Eum ducimus vel odio qui nostrum eaque.'
        type: string
        custom: []
    cleanBodyParameters:
      restaurant_id: cum
      name: hxhacmykrablhywzrmbmktuy
      price: sint
      description: 'Eum ducimus vel odio qui nostrum eaque.'
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data":[]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/menu-items/{id}'
    metadata:
      groupName: 'Menu Items'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Single Menu Item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the menu item.'
        required: true
        example: 19
        type: integer
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/menu-items/{id}'
    metadata:
      groupName: 'Menu Items'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Menu Item.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: Bearer
    urlParameters:
      id:
        name: id
        description: 'The ID of the menu item.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanUrlParameters:
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: exkcgvzdc
        type: string
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 299 characters.'
        required: true
        example: 'Inventore blanditiis praesentium ipsa repudiandae.'
        type: string
        custom: []
    cleanBodyParameters:
      name: exkcgvzdc
      price: qui
      description: 'Inventore blanditiis praesentium ipsa repudiandae.'
    fileParameters: []
    responses:
      -
        status: 202
        content: '{"data":[]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/menu-items/{id}'
    metadata:
      groupName: 'Menu Items'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Menu Item.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: Bearer
    urlParameters:
      id:
        name: id
        description: 'The ID of the menu item.'
        required: true
        example: 8
        type: integer
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
