name: Orders
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/orders
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Orders.'
      description: |-
        <p>
        If authenticated user is an admin, they will have access to all orders, on the other hand if authenticated
        user is a normal user, only orders belonging to them will be returned
        </p>

        <aside>
        <h3>Filtering<h3>
        Can be filtered by: [location], [user.id], [menuItem.id], [menuItem.restaurant.id]
        </aside>

        <aside>
        <h3>Sorting<h3>
        Can sorted by: created_at and or location
        </aside>
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: Bearer
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[[],[]],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":15,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orders
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create New Order.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: Bearer
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      menu_item_id:
        name: menu_item_id
        description: ''
        required: true
        example: consectetur
        type: string
        custom: []
      quantity:
        name: quantity
        description: ''
        required: true
        example: 17
        type: integer
        custom: []
      location:
        name: location
        description: 'Must not be greater than 100 characters.'
        required: true
        example: uhgwevhwomepd
        type: string
        custom: []
      gps:
        name: gps
        description: 'Must not be greater than 50 characters.'
        required: true
        example: rqgtbdmpeqfclcsa
        type: string
        custom: []
      mobile_number:
        name: mobile_number
        description: 'Must not be greater than 20 characters.'
        required: true
        example: akbhkpoiezv
        type: string
        custom: []
      custom_user_id:
        name: custom_user_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters:
      menu_item_id: consectetur
      quantity: 17
      location: uhgwevhwomepd
      gps: rqgtbdmpeqfclcsa
      mobile_number: akbhkpoiezv
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data":[]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Single Order.'
      description: |-
        If authenticated user is an admin, they will have access to any order, on the other hand if authenticated
        user is a normal user, only order belonging to them will be accessible
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanUrlParameters:
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Order.'
      description: |-
        If authenticated user is an admin, they will have access to any order, on the other hand if authenticated
        user is a normal user, only order belonging to them will be accessible
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: Bearer
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 18
        type: integer
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      quantity:
        name: quantity
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
      location:
        name: location
        description: 'Must not be greater than 100 characters.'
        required: true
        example: kpwxxzndtmiitnbhod
        type: string
        custom: []
      gps:
        name: gps
        description: 'Must not be greater than 50 characters.'
        required: true
        example: towfxvvbhbjawrloqp
        type: string
        custom: []
      mobile_number:
        name: mobile_number
        description: 'Must not be greater than 20 characters.'
        required: true
        example: qdyowsiix
        type: string
        custom: []
    cleanBodyParameters:
      quantity: 1
      location: kpwxxzndtmiitnbhod
      gps: towfxvvbhbjawrloqp
      mobile_number: qdyowsiix
    fileParameters: []
    responses:
      -
        status: 202
        content: '{"data":[]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Restaurant.'
      description: |-
        If authenticated user is an admin, they will have access to any order, on the other hand if authenticated
        user is a normal user, only order belonging to them will be accessible
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: Bearer
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 5
        type: integer
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
